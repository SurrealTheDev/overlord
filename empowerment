Players = game:GetService("Players")
RStorage = game:GetService("ReplicatedStorage")
Builds = workspace:FindFirstChild("Engineer Builds")

local Main = Instance.new("ScreenGui")
Main.Name = "zXM10284"
Main.Parent = game:GetService("CoreGui")

MainWindow = Instance.new("Frame");
TargetBox = Instance.new("TextBox");
TargetGroupButton = Instance.new("TextButton");
TEnableButton = Instance.new("TextButton");
CancelButton = Instance.new("TextButton");
TargetTypeBox = Instance.new("TextBox");
RepeatBox = Instance.new("TextBox");
PKARadiusBox = Instance.new("TextBox");


MainWindow.Name = "zXM10285"
MainWindow.Parent = Main
MainWindow.Active = true
MainWindow.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
MainWindow.BorderSizePixel = 0
MainWindow.Position = UDim2.new(1, -250, 1, -220)
MainWindow.Size = UDim2.new(0, 250, 0, 220)
MainWindow.ZIndex = 10

TargetBox.Name = "TrgtBox"
TargetBox.Parent = MainWindow
TargetBox.BackgroundTransparency = 1
TargetBox.BorderSizePixel = 0
TargetBox.Position = UDim2.new(0, 5, 0, 20)
TargetBox.Size = UDim2.new(0, 240, 0, 25)
TargetBox.Font = Enum.Font.SourceSans
TargetBox.TextSize = 18
TargetBox.TextXAlignment = Enum.TextXAlignment.Left
TargetBox.TextColor3 = Color3.new(1, 1, 1)
TargetBox.Text = ""
TargetBox.ZIndex = 10
TargetBox.PlaceholderText = "Target"

TargetTypeBox.Name = "TrgtTypeBox"
TargetTypeBox.Parent = MainWindow
TargetTypeBox.BackgroundTransparency = 1
TargetTypeBox.BorderSizePixel = 0
TargetTypeBox.Position = UDim2.new(0, 5, 0, 45)
TargetTypeBox.Size = UDim2.new(0, 240, 0, 25)
TargetTypeBox.Font = Enum.Font.SourceSans
TargetTypeBox.TextSize = 18
TargetTypeBox.TextXAlignment = Enum.TextXAlignment.Left
TargetTypeBox.TextColor3 = Color3.new(1, 1, 1)
TargetTypeBox.Text = "Player"
TargetTypeBox.ZIndex = 10
TargetTypeBox.PlaceholderText = "Target Type"

RepeatBox.Name = "RepeatBox"
RepeatBox.Parent = MainWindow
RepeatBox.BackgroundTransparency = 1
RepeatBox.BorderSizePixel = 0
RepeatBox.Position = UDim2.new(0, 5, 0, 70)
RepeatBox.Size = UDim2.new(0, 240, 0, 25)
RepeatBox.Font = Enum.Font.SourceSans
RepeatBox.TextSize = 18
RepeatBox.TextXAlignment = Enum.TextXAlignment.Left
RepeatBox.TextColor3 = Color3.new(1, 1, 1)
RepeatBox.Text = "1"
RepeatBox.ZIndex = 10
RepeatBox.PlaceholderText = "Repeat#"

PKARadiusBox.Name = "PKARadiusBox"
PKARadiusBox.Parent = MainWindow
PKARadiusBox.BackgroundTransparency = 1
PKARadiusBox.BorderSizePixel = 0
PKARadiusBox.Position = UDim2.new(0, 5, 0, 95)
PKARadiusBox.Size = UDim2.new(0, 240, 0, 25)
PKARadiusBox.Font = Enum.Font.SourceSans
PKARadiusBox.TextSize = 18
PKARadiusBox.TextXAlignment = Enum.TextXAlignment.Left
PKARadiusBox.TextColor3 = Color3.new(1, 1, 1)
PKARadiusBox.Text = "20"
PKARadiusBox.ZIndex = 10
PKARadiusBox.PlaceholderText = "PKA Radius"



GroupTarget = false;
TargetGroupButton.Position = UDim2.new(0,5,0,120)
TargetGroupButton.Size = UDim2.new(0, 240, 0, 25)
TargetGroupButton.TextColor3 = Color3.new(1, 1, 1)
TargetGroupButton.Name = "Group Button"
TargetGroupButton.Text = "Group : false"
TargetGroupButton.Parent = MainWindow
TargetGroupButton.ZIndex = 10
TargetGroupButton.BackgroundTransparency = 1
TargetGroupButton.BorderSizePixel = 0
TargetGroupButton.TextXAlignment = Enum.TextXAlignment.Left
TargetGroupButton.Font = Enum.Font.SourceSans
TargetGroupButton.TextSize = 18
local function toggleGroupTarget()
    GroupTarget = not GroupTarget
    print("Group target set to ".. tostring(GroupTarget));
    TargetGroupButton.Text = "Group : "..tostring(GroupTarget)
end
TargetGroupButton.Activated:Connect(toggleGroupTarget)

TEnabled = true;
TEnableButton.Position = UDim2.new(0,5,0,145)
TEnableButton.Size = UDim2.new(0, 240, 0, 25)
TEnableButton.TextColor3 = Color3.new(1, 1, 1)
TEnableButton.Name = "Enable Button"
TEnableButton.Text = "Enabled : true"
TEnableButton.Parent = MainWindow
TEnableButton.ZIndex = 10
TEnableButton.BackgroundTransparency = 1
TEnableButton.BorderSizePixel = 0
TEnableButton.TextXAlignment = Enum.TextXAlignment.Left
TEnableButton.Font = Enum.Font.SourceSans
TEnableButton.TextSize = 18
local function toggleEnable()
    GroupTarget = not GroupTarget
    TargetGroupButton.Text = "Enabled : "..tostring(GroupTarget)
end
TEnableButton.Activated:Connect(toggleEnable)


local me = Players.LocalPlayer
local mouse = me:GetMouse()

me:SetAttribute("CANCEL",false);

local vZero = Vector3.new(0, 0, 0)
trgtList = {}


function fire()
    local me = Players.LocalPlayer
    if not TEnabled then return end
    local tSetting = TargetBox.Text
    local rSetting = tonumber(RepeatBox.Text)
    local nSetting = TargetTypeBox.Text
    local gSetting = GroupTarget
    local karSetting = tonumber(PKARadiusBox.Text)
    if rSetting<=0 then return end
    local add = {
        target = tSetting,
        repeats = rSetting,
        etype = nSetting,
        group = gSetting,
        radius = karSetting
    }
    if nSetting == "Player"then
        add.args = {
            [1] = nil,
            [2] = vZero,
            [3] = 0,
            [4] = nil
        }
        trgtList[tSetting]=add;
    elseif nSetting == "Engi" then
        add.args =  {
            [1] =  nil,
            [2] =  vZero,
            [3] = 0,
            [4] =  nil
        }
        trgtList[math.random(1,10000)]=add;
    elseif nSetting == "NPC" then
        add.args =  {
            [1] = nil,
            [2] =  vZero,
            [3] = 0,
            [4] =  nil
        }
        trgtList[math.random(10001,20000)]=add;
    elseif nSetting == "PKA" then
        add.args =  {
            [1] = nil,
            [2] =  vZero,
            [3] = 0,
            [4] =  nil
        }
        trgtList[(tSetting.." w ka")]=add;
    end
end

function main()
    for i,v in pairs(trgtList) do
        v.repeats = v.repeats-1
        if v.etype=="Player" then
            if v.group and v.target=="All" then
                for i,v0 in Players:GetPlayers() do
                    local Arg = v.args
                    
                    Arg[1]=workspace:WaitForChild(v0.Name)
                    Arg[4] = Players:WaitForChild(v0.Name).Character:FindFirstChild("Right Arm")
                    pPlayer(Arg)
                end
            else
                if (Players:FindFirstChild(v.target) and workspace:FindFirstChild(v.target))~=nil then
                    local Arg = v.args
                    Arg[1]=workspace:WaitForChild(v.target)
                    Arg[4] = Players:WaitForChild(v.target).Character:FindFirstChild("Right Arm")
                    pPlayer(Arg)
                end
            end
        elseif v.etype=="Engi" then
            if v.group then
               for i0,v0 in workspace:WaitForChild("Engineer Builds"):GetChildren() do
                for i1,v1 in v0:GetChildren() do
                    if (v.target=="All")or(v1.Name==v.target)  then
                        local Arg = v.args
                        Arg[1]=v1
                        Arg[4]=v1:WaitForChild("HumanoidRootPart")
                        RStorage:WaitForChild("Remote Events"):WaitForChild("Punch"):FireServer(unpack(Arg))
                    end
                end
               end
            else
                local Arg = v.args
                local bCh =  workspace:WaitForChild("Engineer Builds"):FindFirstChild("Build Model"):FindFirstChild(v.target)
                Arg[1]=bCh
                Arg[4]=bCh:WaitForChild("HumanoidRootPart")
                RStorage:WaitForChild("Remote Events"):WaitForChild("Punch"):FireServer(unpack(Arg))
            end
        elseif v.etype=="NPC" then
            if v.group then
               for i,v0 in workspace:GetChildren() do
                    if  (v.target=="All" or v0.Name == v.target) and (Players:FindFirstChild(v0.Name)==nil) then
                        local Arg = v.args
                        Arg[1] = v0
                        Arg[4] = v0:WaitForChild("Torso")
                        RStorage:WaitForChild("Remote Events"):WaitForChild("Punch"):FireServer(unpack(Arg))
                    end
               end
            else
                local nCh =  workspace:FindFirstChild(v.target)
                if nCh~=nil then
                    local Arg = v.args
                    Arg[1] = nCh
                    Arg[4] = nCh:WaitForChild("Torso")
                    RStorage:WaitForChild("Remote Events"):WaitForChild("Punch"):FireServer(unpack(Arg))
                end
            end
        elseif v.etype=="PKA" then
            local mBody = workspace:FindFirstChild(v.target);
            if mBody~=nil then
                local myPos = workspace:WaitForChild(me.Name).HumanoidRootPart.CFrame.Position;
                local _,ty,_ = mBody.HumanoidRootPart.CFrame:ToEulerAnglesXYZ();
                workspace:WaitForChild(me.Name).HumanoidRootPart.CFrame = CFrame.fromEulerAnglesXYZ(0,ty,0) + myPos
                
                for i,v0 in Players:GetPlayers() do
                    if mBody.Name~=v0.Name then
                        local tBody = workspace:WaitForChild(v0.Name);
                        local pa = mBody.HumanoidRootPart.CFrame.Position
                        local pb = tBody.HumanoidRootPart.CFrame.Position
                        if sqMag(pa,pb)<=(v.radius*v.radius) then
                            local Arg =  {
                                [1] = tBody,
                                [2] =  vZero,
                                [3] = 0,
                                [4] =  Players:WaitForChild(v0.Name).Character:FindFirstChild("Right Arm")
                            }
                            pPlayer(Arg)
                        end
                    end
                end 
            end
        end
        if v.repeats<=0 then
            trgtList[i]=nil
        end
    end
end
function sqMag(V1,V2)



    local nv = V2-V1
    local m =  (nv.X*nv.X)+(nv.Y*nv.Y)+(nv.Z*nv.Z)
    print("Squared distance is " .. m)
    return m
end

function pPlayer(arg)
    if (arg[1]:FindFirstChild("Right Arm"):FindFirstChild("SelectionBox")==nil) then
        RStorage:WaitForChild("Remote Events"):WaitForChild("Punch"):FireServer(unpack(arg))
        print("Player has been punched!")
    else
        print("Player has Reverse active!")
    end
end

local connection = mouse.Button2Down:Connect(fire)

repeat
    local exit = me:GetAttribute("CANCEL")
    if TEnabled then
        main()
    end
    wait(0.25)
until exit
connection:Disconnect();
print("Script ended")
